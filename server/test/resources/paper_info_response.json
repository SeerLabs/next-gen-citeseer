{
  "took": 1408,
  "timed_out": false,
  "_shards": {
    "total": 1,
    "successful": 1,
    "skipped": 0,
    "failed": 0
  },
  "hits": {
    "total": {
      "value": 1,
      "relation": "eq"
    },
    "max_score": 13.410047,
    "hits": [
      {
        "_index": "citeseerx",
        "_type": "paper",
        "_id": "10.1.1.170.7725",
        "_score": 13.410047,
        "_source": {
          "scites": 0,
          "incol": null,
          "doi": "",
          "vtime": "2010-09-13 20:23:48",
          "title": "CiteSeer x: aCloud Perspective",
          "text": "ï»¿CiteSeer x : aCloud Perspective\nPradeep B. Teregowda\nPennsylvaniaStateUniversity\nC. LeeGiles\nPennsylvaniaStateUniversity\nBhuvan Urgaonkar\nPennsylvaniaStateUniversity\nAbstract\nInformation retrieval applications are good candidates\nfor hosting in a cloud infrastructure. CiteSeer x a digital\nlibrary and search engine was built with the goal of\nefficientlydisseminatingscientific informationandliterature\nover the web. The framework for CiteSeer x as an\napplication of the SeerSuite software is a design built\nwith extensibility and scalability as fundamental features.\nThislooselycoupledarchitecturewithserviceoriented\ninterfaces allows the whole or parts of SeerSuite\nto readily be placed in the cloud. We discuss in brief\nthe architecture, approaches, and advantages of hosting\nCiteSeer x inthecloud. Wepresentinitialresultsoncosts\nof migrating whole or parts of CiteSeer x to two popular\ncloudofferingsaswellasdiscusstheeffortinvolved.\n1 Introduction\nDigital library search engines have been a continuing\ntopic of research and development for the past several\nyears [4]. The growth in information available both on\nthe Web and from rapid growth in electronic resources\nmakeinformationretrievalsystemslikeCiteSeer x [2,16]\nimportant for access. At time of this publication the\nCiteSeer x collectionindexesmorethan1.6milliondocumentsandreceivesseveralhundredthousanduniquevisitsperday.\nThe rate of growth of digital information is always a\nchallengeto the effectivedesign of informationretrieval\nsystems. Particularly, Web based digital library search\nengines such as CiteSeer x can readily take advantage of\nthe reduced maintenance, elasticity, and availability of\ninfrastructureondemandprovidedbyacloudinfrastructure[6].\nSeerSuite includes components common to other information\nretrieval applications. Inspired by services\nprovidedbyCiteSeer[9],SeerSuiteprovidesamongothersfulltextindexing,autonomouscitationindexing,and\na personal portal in the form of MyCiteSeer. It extracts\nandpublishesextensivemetadatafordocuments,authors\nand citations. Its design takes advantage of open source\napplications such as Tomcat, Solr/Lucene, Java Spring\nFrameworkand open source RDBM systems. Advances\ninanddevelopmentofautomaticmetadataextractionfor\nparsing header and citation information have also been\nimportant.\nSeerSuitebasedapplicationsshareacommonsetofinfrastructurechallengestosupporta\ngrowingset ofdocuments.\nAlthoughthe CiteSeer x architectureallows hosting\nof all components and services in the cloud, the\nsize of the CiteSeer x collection and the amount of data\ntransferredmakecloudhostingofCiteSeer x challenging.\nThere are several cost-effective approaches for solving\nthis problem. We discuss some of these approaches in\ndetail and identify the lessons learned from this analysis.\nThe rest of the paper is arranged in the following\nmanner. Background architecture and services of Seer-\nSuite are discussed in Section 2. The issues of hosting\nare identifiedin Section3. Variousstrategiesfor hosting\nservices are discussed in Sections 4, 5 and 6 with future\nworkinSection7andconclusionsin Section8.\n2 Background and SeerSuite Architecture\n2.1 Background\nCloud offerings have taken a number of forms, not limited\nto Infrastructure, such as Platform and Software\nas a service approaches. Recent research has focused\non adoption, economics and applications. Armbrust et\nal. [6] explain and quantify benefits from the elasticity\nof a cloud. They argue that although costs for using\ncloudmayappearhigherthanbuyingthehardware,elasticity\nand the ability to transfer the risk of under/overprovisioningoutweighsthe\ncalculated costs. They show\nthat cloud cost makes sense when factors such as cooling,\npower, and operational costs are taken into ac-\fcount. Campbell et al. [5] show using simple calculations\nthat for OpenCirrus, the break-even point in terms\nof server utilization is 33%. A number of other recent\npapers present simple calculations showing the suitability\n(or lack thereof)of migrating a certain applicationto\na cloud [20, 18, 15]. Cost, ROI calculators are available\nfromseveralvendorsandconsultinggroups.\nCloud computing infrastructure for information retrieval\nand scientific computing have focused on implementing\nparticular features for cloud storage [14] or\nstudying cost benefit trade-offs [8]. Recent research on\nthe role of cloud infrastructure in information retrieval\nsystems hasfocusedprimarilyon its use forinformation\nextraction [12]. Furthermore, the focus has been on the\ncomputational costs with little attention to data storage\ncosts withLearnedapplicationspertinentto gridanddistributedcomputing[11].\nIncontrast,wefocusontheuse\nof cloud infrastructure hosted on infrastructure already\nofferedbyvariousvendors.\n2.2 Architecture\nThe following subsections are meant to provide a brief\nintroduction to SeerSuite architecture and services supporting\nSeerSuite. We also provide a discussion of the\nfeasibility of and refactoring required to migrate these\nservices or components to the cloud. Figure 1 shows\nvarious components of SeerSuite. Service-oriented interfacesallowcomponentstobedistributedacrossphysical\nsystems. Thesecomponentscanbebroadlygrouped\ninto those responsible for handling user requests and\nthose handling acquisition and ingestion documents.\nAmong those handling user requests is the Web application\nwhich provides presentation and personalization\nservices. Thefocusedcrawler,documentconversionand\nextraction, ingestion and maintenance services are responsible\nfor acquiringand ingesting documents. These\nacquired documents and metadata are then stored in the\ndatastoragecomponentsforuseraccess.\n2.2.1 WebApplication\nUser requests at the Web application are processed with\nthesupportofthedatabase,indexortherepository. Seer-\nSuite supports interfaces such as the OAI [17] API to\nallow programmatic access to data stored in the collection.\nThe Web application allows users to search for\nauthors, documents, citations and view document metadata.\nSomeservicesprovidedbytheWebapplicationrequire\nstate based interactions with the user, particularly\nMyCiteSeer. For cloud based hosting minor refactoring\nwill be required to support user authentication with\nMyCiteSeer. The Web application load dependson traffic,\nwhich varies throughout the day, making the Web\nFigure1: SeerSuiteArchitecture\napplicationastrongcandidateforsuchahosting.\n2.2.2 FocusedCrawler\nDocumentacquisitiondrivesthe growthof SeerSuite instances.\nIn particular, focused crawlers [7] help acquire\nrelevant documents efficiently. The focused crawler is\na strong candidate for cloud hosting, since it can take\nadvantage of the elasticity and on demand provisioning\nwithefficientlyscheduledcrawls.\n2.2.3 Document Conversion and Information Extraction\nBefore documents can be processed by the extraction\nsystem, the documentsin PDF or PostScript formatsare\nconvertedintotextandfilteredto removedocumentsnot\ncontainingcitations. Documentsacquired from the Web\nare processed by multiple modules which extract extensive\ndocument, citation, and author metadata. These\nmodules are based on state-of-the-art machine learning\ntechniques. Prominentamongthese is the headerparser,\nwhich extracts document and author information. The\nParsCitmoduleisutilizedtoextractcitationinformation.\nThemetadataextractionsystemisnotastrongcandidate\nforPlatform-as-a-Servicecloudofferings(e.g.,Windows\nAzure),asextensiverefactoringwill berequired.\n2.2.4 DocumentIngestion\nThe documents processed by the extraction and conversion\nservice are ingested into the system. This includes\nadding the document and related metadata to the\n2\fdatabaseandto the repository. By comparingthe checksumofthedocumenttobeingested,theingestionsystem\navoids addingduplicatesinto the collection. Documents\nareassignedauniquedocumentobjectidentifierfromthe\nDOI service. The use of service oriented interfaces and\ntheminimalcodefootprintallowtheingestionsystemto\nbeeasily hostedinthe cloud.\n2.2.5 DataStorage\nPersistenceofdataextractedisachievedbytheuseofindex,\ndatabases and file storage components(repository).\nThe database is utilized by the web application to provide\ndocument summaries and metadata. The index allowsuserstoquerythefulltextandcitationinformation.\nTherepositorycachesdocumentscrawledbythecrawler\nandmetadataextractedbytheextractors.\n2.2.6 MaintenanceService\nTasksnotpartofthe ingestionsystemsuchasupdatesto\nthe index, inference based metadata updates, charts and\ngenerationof citation charts and statistics are performed\nby the maintenance system. The maintenance systems\ngenerateverylittle data,andcanbescheduledbytheadministrator.\nTheseservicesneedtoclosertothedatastorageduetovastamountofinformationprocessedforeach\niterationoftheiroperation. Theircandidacyishencedependentonthe\nhostingofthedatastoragecomponents.\n2.2.7 FederatedServices\nSeerSuite provides several features that are not part of\nthe main application. These features are supported by\nserviceswhichmaynotsharethesameframeworkorapplication\ncomponents but share infrastructure. Many of\nthese servicesare underdevelopment. Suchcomponents\nare strong candidates for migration into the cloud since\nthey can take advantage of the pay-as-you-go charging\nofferedbycloudproducts.\n2.3 Deployment\nThe current deployment of SeerSuite as CiteSeer x is on\na group of heterogeneous server machines. Two Web\napplication instances are hosted on the Apache Tomcat\nplatform in a cluster. Each Web application instance\nis hosted on a machine with two dual core CPUs and\n16GBofRAM.TheWebtrafficisloadbalancedthrough\na software-basedL4 load balancer cluster. The database\nand the repositoryare hosted on separate machineswith\nlargestorage(>15TB),dualcoredualCPUs,and16GB\nofRAM.MySQLisusedastheRDBMS forthesystem.\nIndices for document, tables, author names are hosted\nseparately on machines with dual core dual CPU and\n16GB of RAM. The repository is accessed by the Web\nserversusingGlobalFileSystem(GFS)overGlobalNetworkBlockDevice.\n2.4 Terminology\nA description of terms used in future discussions, relevantinthecontextofSeerSuiteareprovidedbelow.\nRequest Types: User requests can be grouped into\nsearch,documentviews,MyCiteSeerandothersormisc.\nThe search request and document view requests involve\nthe Web application, database and the index. MyCite-\nSeer requests involve the Web application and database.\nOthersincluderequestsforstylesheets,images.\nPeak Load: Thisrepresentsaset of requestsobserved\nat the web server, exceeding a set threshold of requests\npersecond(90thpercentile).\n3 Problem Definition\nSeerSuite asawholecan be hostedin Infrastructureas a\nServiceplatformswithminimalrefactoring. Suchahosting,\nhowever, is expensive with current cloud offerings.\nThis is due to the large collection size and the volume\nof data transfered between the application and the user.\nThe key question we are interested in answering in this\ncontext is moving which sections, components or subset\nofCiteseer x toacloudwouldbemost costeffective?\nTo answer this question, we consider the entire application\nwith particular focus on the Web application including\nits supporting components, the index, database\nandtherepository. Wepresentthreedifferentapproaches\nby presenting first a hypothesis and discuss the cost and\nimplications. We utilizetheexistinglogmonitoringdata\ncollected from CiteSeer x . The Web application logs for\na period of 15 days were analyzed to obtain data used\nin the following sections. Figure 2 shows the numberof\nrequests made during this period along with the type of\nrequest.\n4 Component Hosting\nFrom our discussion of SeerSuite, it is possible to identify\nspecificcomponentsin SeerSuiteto behosted. Each\ncomponenthosted in the cloud includesall of its associated\nmodules and subsystems. For example, hosting of\nthe SeerSuite index includes hosting of the storage for\ntheindex,applicationcode,andinterfaces.\nWe consider components of the system, choosing\ncomponents based on size, data transfer, and feasibility\nofmigration. FromTable 1,weseethecostofhostingis\ndominatedbythecostofcomputation(perinstancecost).\nTheothermajorcostcomponentsincludethecostofdata\n3\fAmazonEC2 [1] andGoogleAppEngine[3]. Cost estimatesare\nbasedona30daymonth.\nChoice of vendors is a result of support in terms of\nenvironment and libraries offered or supported by these\nvendors. InthecaseofAmazonEC2,weconsideramapping\nof one to one to an extra large instance for hosting\nthe database, application, index, repository, extraction\nand crawler services. We assume that additional instances\nare provided as required in Google App Engine\nwithnoadditionalcost.\nFigure2: TrafficBy RequestType\nstorage and data transferred in and out of the cloud. For\nhosting components the compute costs are a constant,\nsince the componentsalways operational. Therefore we\nnowaddressthe datastorageandtransfercosts.\nFigure 3 showsthe flow of data between components\nof CiteSeer x . Data for creating this graph was obtained\nfrom log files and application specific monitors. In the\ncase of crawlers, the information extraction data flow\nwas assumed proportional to the number of documents\nacquired and processed. This graph is useful for determiningcandidatesforhosting.\nForexample,ifCiteSeer x\nwere hosted entirely within the cloud infrastructure, the\namountofdatastoredinthecloudwouldbe1.7TB,with\n3.2TBofdatatransferredbetweentheuser,webandthe\napplication. Clearly, the repository is the largest com-\nCost Amazon Google\nInitialSetup DataIn 1820.4 0 182\nStored 1820.4 182.04 273.06\nDataIn 152 0 15.2\nMonthly DataOut 3072 460.8 368.64\nTrans. 368 190.77 0\nCPU 30*24 2937.6 144\nTotalMonthly $3771.21 $800.9\nTable1: CiteSeer x Hosting\nTable 1 provides the cost of hosting CiteSeer x in the\ncloud for a month. We now examine the cost of hosting\nindividual components in the cloud, with all other services\nhosted locally. Estimates are providedin Table 2.\nCiteSeer x migration costs include initial setup costs, as\nComponent A.EC2 G.AppEngine\nInitial Month Initial Month\nWeb Service 0 1448.18 0 942.53\nRepository 0 1011.88 163.8 593.21\nDatabase 0 858.89 12 348.05\nIndex 0 527.08 3.1 83.48\nExtraction 0 499.02 0 90.6\nCrawler 0 513.4 0 105\nTable2: ComponentCosts (USD)intheCloud\nFigure3: DataFlow -CiteSeer x Components\nponent in size, while the web application has the largest\ndata volume. We providea cost estimate for the components\nbased on cloud infrastructure services offered by\na substantial collection already exists. New applications\nmaynotincurinitialdata transfercosts.\nNote that Amazon currently provides free data transfers\ninto the cloud. If this were not the case, hosting\nservicesonAmazonwouldbemuchmoreexpensiveand\nalsoincurinitialsetupcosts. Calculatingthecostofhosting\nthe entire application leads to a figure of $3771 for\nAmazonEC2and$800forGoogleAppEngine. Thecost\nof hosting componentsalso lends support to the conclusionsdrawnaboutdataandaccessinin\n[10].\nIndividual components hosted on the cloud have implications\nbeyond the cost of hosting them in the cloud.\nCosts related to refactoring code for migration has not\nbeen accounted for in Table 2. In the case of Google\nApp Engine,existing code written in languagesnot sup-\n4\fported by App Engine will require significant refactoring.\nAlongwithcomponentshostedinthecloud,componentshostedlocally\nmayrequirerefactoring. Thisrefactoring\nis minimal if the service or component utilized a\nservice oriented interface and significant when services\narecloselycoupled.\nLessons Learned: If the cost of hosting an entire serviceisprohibitive,hostingcomponentsmaybeareasonable\napproach to taking advantage of cloud infrastructure.\nThecosteffectivenessofsuchanapproachdepends\nondatatransferredthroughtheservice. Looselycoupled\ncomponents are easier to migrate. For existing components\nand code, refactoring costs will provide a closer\nestimates of costs. This approach is suitable, when a\nfixedbudgetconstrainstheplacementofservicesorcomponents.\nBy identifying components, data transfer and\nrefactoringcostsahostingsolutioncanbeidentified.\n5 Content Hosting\nContentparticularlystaticimages,stylesheets,javascript\ncommon to most web pages need not be hosted locally.\nAn analysis of peak traffic at the web services provides\nan insight on how this can be achieved. From analysis\nof figure4, we see that most requestsforpeak traffic are\nforsuchcontent. In thiscase the amountofcomputation\nrequiredanddatastoredonthecloudissmall,thecostof\nhosting is cost-effective. The total size of all files to be\nThe same approach can be used to identify elements\nsuch as a subset of the repository to be placed in the\ncloud. Such an approach would involve identifying the\nmost commonly accessed documents and placing them\nboth locally andin the cloud. Duringpeak loads, clients\ncanbedirectedto thecloudforaccess.\nLesson Learned: Hosting specific content relevant to\npeak load scenarios in the cloud can be beneficial, and\nthesimplest approachtohostingservicesinthecloud.\n6 Load basedpartitioning\nThis approach is particularly important for supporting\nthegrowthintraffic,flashcrowdsprovidingusersaccess\ntoservice.\nNo of Requests (#)\n5000\n4500\n4000\n3500\n3000\n2500\n2000\n1500\n1000\n500\n0\n0 4 8 12 16 20 24\nTime (hours)\nFigure5: NumberofRequestsperSecond\nFigure4: RequestTypesat Peak\nplacedonthecloudis2.24MB. Byhostingthesefilesin\nthe cloud, the amount of data transferred for CiteSeer x\nfrom the cloud is 390.26 GB costing less then $142 per\nmonth (on both Amazon EC2 and Google App Engine\nservices including a small instance cost). While this is\na small part of more than 3 TB of data volume between\nthe applicationand the user, it helpsthe system satisfy a\nsignificantnumberofpeakloadrequests.\nFigure 5showstherequestsreceivedatthewebserver.\nFrom the graph we identify that the 90th percentile is\nrepresented by 60 requests per second. Most of these\nrequests are for elements associated with presentation\n(javascript and stylesheets). Assuming that the traffic\ngrowth continues at the same pace and as more features\n(AlgorithmandFiguresearch)areadded,Thereisaneed\nfor provisioning more systems. Instead of procuring\nthese systems, infrastructure at the cloud can be consideredtofulfillthisneed.\nFurther examination provides evidence of selfsimilarity\nin the requestarrival process, which has interesting\nimplications for resource provisioning. The peak\nresourceneedsofseveralCiteSeer x componentsaresignificantly\nhigher than their average-case (or even a high\npercentile)needs.\nTwo strategies are possible in partitioning based on\nload. Of these, one strategy would be to host a copy of\nthe entire application in the cloud, using load balancers\n5\ftoidentifyanddirecttrafficduringpeakloadconditions.\nTable 3providesthecosts ofsuchahostingsolutionfor\nCiteSeer x in AmazonEC2 and GoogleApp Engine. All\ndata measurements are in GB, and transaction measurementsintransactionspersecondobtainedviaiostat.\nCost Amazon Google\nInitialSetup DataIn 1820.4 0 182\nStored 1820.4 182.04 273.06\nDataIn 14.78 0 1.48\nMonthly DataOut 298.7 44.8 35.84\nTrans. 368 9.27 0\nCPU 70 285.6 7\nTotalMonthly $521.71 $317.38\nTable3: CiteSeer x PeakLoadHosting\nThese costs can be considered in comparison to the\ncost of procuring, maintaining systems. Savings by\navoiding adoption of storage systems locally add to the\nattractivenessofcloudinfrastructure.\nAn alternateapproachwouldbe to host onlythecomponentunderstressinthecloud,Forexample,adatabase\nreplica to support a locally hosted database could be deployed\nin the cloud. If this instance were used only during\npeak load conditions, the costs would decrease to\n$385,sincetheinstancewouldbe inusefor70hours.\nLessons Learned: By utilizing a replica or subset of\ntheapplicationforhandlingonlypeakloads,wecantake\nadvantageofcloudinfrastructureinacost-effectivemanner.\nThis can resolve issues stemming from the growth\nofthecollectionandusertraffic.\n7 Future Work\nWe explored various stratergies for hosting SeerSuite in\nthecloud,InSection6webrieflymentionedthetemporal\nnature of traffic and user behavior. By identifying user\npatterns, the hosting solutions can be optimized to take\nadvantagethesepatterns. While thisdiscussionincluded\nthe AmazonEC2 and GoogleApp Enginefor cost comparison,\nthis work needs to be extended by examining\nindepthoptionsofferedbyothercloudofferings,private\ncloudsandvirtualizationsolutions.\nProducts such as private clouds offered Eucalyptus[13]canbeutilizedtotakeadvantageofhardwarealreadyexistingaspartofthesystem.\nComponentsrelated\nto user interaction with CiteSeer x hosting with services\nlikeAmazonVirtualPrivateClouds,andlocalcloudscan\nbeconsideredfortheseservices.\nImpact of including cloud hosted services on other\nservices has not be considered in the current discussion.\nInclusion of cloud services could require significant\nrefactoring and changes to maintenance cycles. Issues\nwith how issues like latency, load balancing have\nnot been addressed in this paper. Several opportunities\nexistwithinSeerSuiteframeworkforadoptingvirtualizationandcloudinfrastructure.\nInparticular,therepository\ncanberestructuredtotakeadvantageofcloudbasedstorage\nsolutionsin aneffectivemanner. Hadoop[19] based\nmetadata extraction and log analysis systems could enablefasterdocumentacquisition.\n8 Conclusions\nPreliminary costs for hosting SeerSuite instances such\nas CiteSeer x in the cloud prove reasonable. We develop\ndifferent approaches that can be adopted either for their\ncost-efficiency, simplicity, or handling peak loads. Cost\nestimation for each approachalong with lessons learned\nfromanalysisprovideaguidelineforfurtherexploration.\nOur future work would focus on adoption of virtualization\nand extraction systems suitable for hosting in the\ncloud. In addition to these goals, we would like to examine\nuser behavior,issues in privacy,security forcomponents\nhosted in the cloud that were not discussed in\nthis work. As part of these discussions, we have presentedadetailedexaminationoftheexistingdeployment\nofSeerSuiteinCiteSeer x .\n9 Acknowledgments\nThe authors acknowledge partial support from NSF\nCISE. Urgaonkarâs research was funded in part by NSF\ngrantsCCF-0811670andCNS-0720456.\nReferences\n[1] Amazon EC2. http://aws.amazon.com/ec2/.\n[2] Citeseer x . http://citeseerx.ist.psu.edu/.\n[3] Google App Engine. http://code.google.com/\nappengine/.\n[4] Greenstone. http://www.greenstone.org/.\n[5] Open cirrus: Cloud computing research testbed. https://\nopencirrus.org/.\n[6] ARMBRUST, M., FOX, A., GRIFFITH, R., JOSEPH, A., KATZ,\nR., KONWINSKI, A., LEE, G., PATTERSON, D., RABKIN, A.,\nSTOICA, I., ET AL. Above the clouds: A berkeley view of cloud\ncomputing. EECS Department, University of California, Berkeley,\nTech. Rep. UCB/EECS-2009-28 (2009).\n[7] CHAKRABARTI, S., VAN DEN BERG, M., AND DOM, B. Focused\ncrawling: a new approach to topic-specific Web resource\ndiscovery. Computer Networks 31, 11-16 (1999), 1623â1640.\n[8] DEELMAN, E., SINGH, G., LIVNY, M., BERRIMAN, B., AND\nGOOD, J. The cost of doing science on the cloud: the montage\nexample. In Proceedings of the 2008 ACM/IEEE conference on\nSupercomputing (2008), pp. 1â12.\n[9] GILES,C.,BOLLACKER,K., ANDLAWRENCE,S.CiteSeer: An\nautomatic citation indexing system. In Proceedings of the third\nACM conference on Digital libraries (1998), ACM New York,\nNY, USA,pp.89â98.\n6\f[10] GRAY, J. Distributed computing economics. Tech. rep., Microsoft\nResearch, 2003.\n[11] GROSSMAN, R., AND GU, Y. Data mining using high performancedataclouds:\nExperimentalstudiesusingsectorandsphere.\nIn Proceeding of the 14th ACM SIGKDD international conference\non Knowledge discovery and data mining (2008), ACM,\npp. 920â927.\n[12] MIKA,P., ANDTUMMARELLO,G. Websemanticsintheclouds.\nIEEEIntelligent Systems 23, 5 (2008), 82â87.\n[13] NURMI, D., WOLSKI, R., GRZEGORCZYK, C., OBERTELLI,\nG., SOMAN,S.,YOUSEFF,L., AND ZAGORODNOV,D. Theeucalyptus\nopen-source cloud-computing system. In Proceedings\nof the 2009 9th IEEE/ACM International Symposium on Cluster\nComputing and the Grid-Volume 00 (2009), IEEEComputer Society,\npp. 124â131.\n[14] SINGH, A., SRIVATSA, M., AND LIU, L. Search-as-a-service:\nOutsourced search over outsourced storage. ACM Trans. Web 3,\n4 (2009), 1â33.\n[15] TEREGOWDA,P.URGAONKAR,B., ANDGILES,C.Cloudcomputing:\nA digital libraries perspective. In 3rd IEEE 2010 International\nConference on Cloud Computing (2010).\n[16] TEREGOWDA, P. B., COUNCILL, I. G., FERNANDEZ, J. P. R.,\nKASBHA,M., ZHENG, S., AND GILES,L. C. Seersuite: Developing\na scalable and reliable application framework for building\ndigital libraries by crawling the web. In USENIX Conference on\nWeb Application Development (2010).\n[17] VAN DE SOMPEL, H., NELSON, M., LAGOZE, C., AND\nWARNER, S. Resource harvesting within the OAI-PMH framework.\nD-Lib Magazine 10,12 (2004), 1082â9873.\n[18] WALKER, E., BRISKEN, W., AND ROMNEY, J. To lease or not\nto lease from storage clouds. Computer 43 (2010), 44â50.\n[19] WEIGEL, F., PANDA, B., RIEDEWALD, M., GEHRKE, J., AND\nCALIMLIM,M. Large-scalecollaborative analysisandextraction\nof web data. Proc.VLDBEndow. 1, 2 (2008), 1476â1479.\n[20] WOOD, T., CECCHET,E., RAMAKRISHNANY,K.,SHENOY, P.,\nVAN DER MERWEY, J., AND VENKATARAMANI, A. Disaster\nrecovery as a cloud service: Economic benefits & deployment\nchallenges. In 2nd USENIX Workshop on Hot Topics in Cloud\nComputing (2010).\n7",
          "abstract": "Information retrieval applications are good candidates for hosting in a cloud infrastructure. CiteSeer x a digital library and search engine was built with the goal of efficientlydisseminatingscientific informationandliterature over the web. The framework for CiteSeer x as an application of the SeerSuite software is a design built with extensibility and scalability as fundamental features. Thislooselycoupledarchitecturewithserviceoriented interfaces allows the whole or parts of SeerSuite to readily be placed in the cloud. We discuss in brief the architecture, approaches, and advantages of hosting CiteSeer x inthecloud. Wepresentinitialresultsoncosts of migrating whole or parts of CiteSeer x to two popular cloudofferingsaswellasdiscusstheeffortinvolved. 1",
          "year": 0,
          "venue": "None",
          "cluster": 10867694,
          "citedby": [],
          "paper_id": "10.1.1.170.7725",
          "authors": [
            {
              "cluster": 1839860,
              "author_id": 8910092,
              "name": "Pradeep B. Teregowda"
            },
            {
              "cluster": 1,
              "author_id": 8910093,
              "name": "C. Leegiles"
            },
            {
              "cluster": 1336235,
              "author_id": 8910094,
              "name": "Bhuvan Urgaonkar"
            }
          ],
          "keywords": [],
          "selfCites": 0,
          "authorNorms": null,
          "ncites": 0,
          "cites": [
            9439442,
            58084,
            9289448,
            405122,
            10867695,
            9432960,
            10867696,
            10867697,
            10867698,
            523821,
            10867699,
            10867700,
            10792568
          ]
        }
      }
    ]
  }
}